// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.176.1
//   protoc               v5.26.1
// source: proto/school-statistic.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices'
import { Observable } from 'rxjs'

export const protobufPackageSchoolStatistic = 'schoolStatistic'

export interface GetAveragePointDto {
  period: string
  schoolId: number
  system: number
}

export interface ReturnGetAveragePoint {
  period: string
  averagePoint: number
  labels: string[]
  data: number[]
}

export const SCHOOL_STATISTIC_PACKAGE_NAME = 'schoolStatistic'

export interface SchoolStatisticServiceClient {
  getAveragePoint(request: GetAveragePointDto): Observable<ReturnGetAveragePoint>
}

export interface SchoolStatisticServiceController {
  getAveragePoint(
    request: GetAveragePointDto,
  ): Promise<ReturnGetAveragePoint> | Observable<ReturnGetAveragePoint> | ReturnGetAveragePoint
}

export function SchoolStatisticServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ['getAveragePoint']
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method)
      GrpcMethod('SchoolStatisticService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      )
    }
    const grpcStreamMethods: string[] = []
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method)
      GrpcStreamMethod('SchoolStatisticService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      )
    }
  }
}

export const SCHOOL_STATISTIC_SERVICE_NAME = 'SchoolStatisticService'
